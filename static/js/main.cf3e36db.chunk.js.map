{"version":3,"sources":["components/Homepage/NavBar.js","components/Homepage/CTA.js","components/Homepage/Header.js","components/Homepage/Step.js","components/Homepage/Instructions.js","components/Homepage/BlogPost.js","components/Homepage/Blog.js","components/Homepage/Footer.js","components/Popup/UploadPopup.js","components/ResultPage/Issue.js","components/ResultPage/IssueContainer.js","assets/images/loader.gif","components/ResultPage/ResultPage.js","Homepage.js","App.js","index.js"],"names":["NavBar","onTryNowClick","className","style","to","smooth","duration","href","onClick","CTA","icon","text","Header","Step","stepNum","stepTitle","stepDes","Instructions","BlogPost","imgLink","blogTitle","blogBody","src","alt","Blog","Footer","UploadPopup","onClose","onCapture","browseRef","React","createRef","cameraRef","deviceType","userAgent","navigator","test","getDeviceType","current","click","ref","type","display","accept","onChange","event","target","files","capture","Issue","issueTitle","issueBody","cureURL","rel","IssueContainer","diseases","length","map","disease","issueImage","image","name","ResultPage","getDiseases","onTryAnotherClick","useState","setDiseases","loading","setLoading","useEffect","a","fetchData","id","loader","Homepage","state","showTryNow","showPrediction","tfModel","labels","tryNowClickHandler","setState","tryNowCloseHandler","resultPageCloseHandler","tryAnotherClickHandler","imageSelectHandler","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","base64","predictDisease","setTimeout","img","document","getElementById","offset","tf","tensorImg","fromPixels","resizeNearestNeighbor","toFloat","expandDims","tensorImg_scaled","div","predict","data","prediction","predicted_class","class_idxs","Array","from","dataSync","class_idx","predictedDisease","split","replaceAll","push","encodeURI","fetch","response","json","JSON","stringify","parse","this","Component","library","add","faCloudUploadAlt","faMobileAlt","faChevronRight","faList","faFolderOpen","faCamera","faImages","faWindowClose","faComments","faExclamationTriangle","faBolt","faSkull","faFirstAid","faPlusSquare","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf3e36db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst NavBar = ({onTryNowClick}) => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h3 className=\"logo\" style={{\"fontSize\": \"30px\"}}>Rehnuma-E-Kisaan</h3>\r\n      <nav>\r\n        <Link to=\"instructions\" smooth={true} duration={500} className=\"navbar-link\">\r\n          How it works?\r\n        </Link>\r\n        <Link to=\"blog\" smooth={true} duration={500} className=\"navbar-link\">\r\n          Learn More\r\n        </Link>\r\n        <button href=\"#\" className=\"navbar-link button\" onClick={onTryNowClick}>\r\n          Hasil Rehnumai\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst CTA = ({icon, text, onClick}) => {\r\n    return (\r\n        <div className=\"cta\" onClick={onClick}>\r\n            <FontAwesomeIcon icon={`${icon}`} />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CTA;","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport CTA from \"./CTA\";\r\n\r\nconst Header = ({onTryNowClick}) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <NavBar onTryNowClick={onTryNowClick}/>\r\n      <h1 className=\"header-text\">\r\n        Try our AI Powered <br /> Disease Detection\r\n      </h1>\r\n      <CTA icon=\"cloud-upload-alt\" text=\"Try Now\" onClick={onTryNowClick}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst Step = ({ stepNum, icon, stepTitle, stepDes }) => {\r\n  return (\r\n    <div className=\"step\">\r\n      <FontAwesomeIcon icon={`${icon}`} className=\"icon\" />\r\n      <div className=\"stepnum\">{stepNum}</div>\r\n      <h4 className=\"steptitle\">{stepTitle}</h4>\r\n      <p className=\"stepdes\">{stepDes}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport Step from './Step'\r\n\r\nconst Instructions = () => {\r\n    return (\r\n        <div className=\"instructions\">\r\n            <h2 className=\"instruction-heading\">How it works?</h2>\r\n            <div className=\"step-container\">\r\n                <Step icon=\"mobile-alt\" stepNum=\"1\" stepTitle=\"Click a Pic\" stepDes=\"Take a Picture of your plant leaf\" />\r\n                <FontAwesomeIcon icon=\"chevron-right\" className=\"icon arrow-icon\"/>\r\n                <Step icon=\"cloud-upload-alt\" stepNum=\"2\" stepTitle=\"Upload on Rehnuma-E-Kisaan\" stepDes=\"Visit Rehnuma-E-Kisaan on your device and click on Try Now to upload your picture\" />\r\n                <FontAwesomeIcon icon=\"chevron-right\" className=\"icon arrow-icon\" />\r\n                <Step icon=\"list\" stepNum=\"3\" stepTitle=\"Get final Report\" stepDes=\"Rehnuma-E-Kisaan will analyze your plant and will display a detailed report for you\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React from \"react\";\r\n\r\nconst BlogPost = ({ imgLink, blogTitle, blogBody }) => {\r\n  return (\r\n    <div className=\"blogpost\">\r\n      <div className=\"blog-img\">\r\n        <img src={`${imgLink}`} alt={blogTitle} />\r\n      </div>\r\n      <div className=\"blog-text\">\r\n        <h3 className=\"blog-title\">{blogTitle}</h3>\r\n        <p className=\"blog-body\">{blogBody}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","import React from \"react\";\r\nimport BlogPost from \"./BlogPost\";\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <div className=\"blog\" alt=\"\">\r\n      <BlogPost\r\n        imgLink=\"https://images.unsplash.com/photo-1521334884684-d80222895322?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\"\r\n        blogTitle=\"Your plants need you!\"\r\n        blogBody=\"Human society needs to increase food production by an estimated 70% by 2050 to feed an expected population size that is predicted to be over 9 billion people. Currently, infectious diseases reduce the potential yield by an average of 40% with many farmers in the developing world experiencing yield losses as high as 100%!\"\r\n      />\r\n      <BlogPost\r\n        imgLink=\"https://images.unsplash.com/photo-1601001815894-4bb6c81416d7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\"\r\n        blogTitle=\"Act before it’s too late\"\r\n        blogBody=\"The widespread distribution of smartphones among crop growers around the world with an expected 5 billion smartphones by 2020 offers the potential of turning the smartphone into a valuable tool for diverse communities growing food. We allow you to diagnose plant disease with your smartphone.\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className=\"copyright\">\r\n      © 2022 Rehnuma-E-Kisaan\r\n      </p>\r\n      {/* <div className=\"link-group\">\r\n        <h1 className=\"linkgroup-title\">Link Group 1</h1>\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n      </div>\r\n      <div className=\"link-group\">\r\n        <h1 className=\"linkgroup-title\">Link Group 1</h1>\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n      </div>\r\n      <div className=\"link-group\">\r\n        <h1 className=\"linkgroup-title\">Link Group 1</h1>\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n        <FooterLink linkTitle=\"Link Title\" link=\"#\" />\r\n      </div> */}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport CTA from \"../Homepage/CTA\";\r\n\r\nconst UploadPopup = ({ onClose, onCapture }) => {\r\n\r\n  const browseRef = React.createRef();\r\n  const cameraRef = React.createRef();\r\n\r\n  const getDeviceType = () => {\r\n    const userAgent = navigator.userAgent;\r\n\r\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(userAgent)) {\r\n      return \"tablet\";\r\n    }\r\n    if (/Mobile|iP(hone|od)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(userAgent)) {\r\n      return \"mobile\";\r\n    }\r\n    return \"desktop\";\r\n  }\r\n\r\n  const deviceType = getDeviceType();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popup\">\r\n        <FontAwesomeIcon icon=\"images\" />\r\n        <CTA icon=\"folder-open\" text=\"Browse\" onClick={() => { browseRef.current.click() }} />\r\n        {\r\n          deviceType !== \"desktop\" ?\r\n            <CTA icon=\"camera\" text=\"Camera\" onClick={() => { cameraRef.current.click() }} />\r\n            :\r\n            null\r\n        }\r\n        <input ref={browseRef} type=\"file\" style={{ display: 'none' }} accept=\"image/*\" onChange={(event) => { onCapture(event.target.files[0]) }} />\r\n        <input ref={cameraRef} type=\"file\" style={{ display: 'none' }} accept=\"image/*\" capture=\"environment\" onChange={(event) => { onCapture(event.target.files[0]) }} />\r\n      </div>\r\n      <FontAwesomeIcon className=\"close-button\" icon=\"window-close\" onClick={onClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadPopup;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Issue = ({\r\n  // issueImage,\r\n  issueTitle,\r\n  issueBody,\r\n  cureURL\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"issue\">\r\n      {/* <img src={`${issueImage}`} alt={issueTitle} /> */}\r\n      <div className=\"issue-text\">\r\n        <h3>{issueTitle}</h3>\r\n        <p>{issueBody}</p>\r\n      </div>\r\n      <a className=\"cure-button\" href={cureURL} target=\"_blank\" rel=\"noreferrer\">\r\n        <FontAwesomeIcon icon=\"plus-square\" className=\"cure-button-icon\" />\r\n        <h4>CURE <br /> NOW</h4>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Issue from \"./Issue\";\r\n\r\nconst IssueContainer = ({ diseases }) => {\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <div className=\"issue-counter\">\r\n        <FontAwesomeIcon icon=\"exclamation-triangle\" className=\"issue-counter-icon\" />\r\n        <h2>{diseases.length} Issue{diseases.length > 1 ? 's' : ''} Found</h2>\r\n      </div>\r\n\r\n      {\r\n        diseases.map(disease => (\r\n          <Issue\r\n            issueImage={disease.image}\r\n            issueTitle={disease.disease}\r\n            issueBody={disease.name}\r\n            cureURL={disease.cureURL}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueContainer;\r\n","export default __webpack_public_path__ + \"static/media/loader.be2f955b.gif\";","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport IssueContainer from \"./IssueContainer\";\r\nimport CTA from \"../Homepage/CTA\";\r\nimport loader from \"../../assets/images/loader.gif\";\r\n\r\nconst ResultPage = ({ image, getDiseases, onTryAnotherClick, onClose }) => {\r\n\r\n  const [diseases, setDiseases] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDiseases(await getDiseases());\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [getDiseases]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"resultpage\">\r\n        <img src={image} alt=\"Plant\" id=\"plant-photo\" />\r\n        {\r\n          loading ?\r\n            <img src={loader} alt=\"Loader\" />\r\n            :\r\n            <>\r\n              <IssueContainer diseases={diseases} />\r\n              <CTA icon=\"cloud-upload-alt\" text=\"Test Another\" onClick={onTryAnotherClick} />\r\n              <a href=\"https://forms.gle/bCNf3rMeKg71U95U9\" className=\"cta\">\r\n                <FontAwesomeIcon icon=\"comments\" />\r\n                <p>Submit Feedback</p>\r\n              </a>\r\n            </>\r\n        }\r\n      </div>\r\n\r\n      <FontAwesomeIcon className=\"close-button\" icon=\"window-close\" onClick={onClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./components/Homepage/Header\";\r\nimport Instructions from \"./components/Homepage/Instructions\";\r\nimport Blog from \"./components/Homepage/Blog\";\r\nimport Footer from \"./components/Homepage/Footer\";\r\nimport UploadPopup from \"./components/Popup/UploadPopup\";\r\nimport ResultPage from \"./components/ResultPage/ResultPage\";\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nclass Homepage extends Component {\r\n\r\n  state = {\r\n    showTryNow: false,\r\n    showPrediction: false,\r\n    image: null,\r\n    tfModel: null,\r\n    labels: null\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    let response = await fetch('https://coverimages.blob.core.windows.net/plantai-tfjs-model/class_indices.json');\r\n    let labels = await response.json();\r\n    labels = JSON.stringify(labels);\r\n    labels = JSON.parse(labels);\r\n\r\n    let tfModel = await tf.loadLayersModel('https://coverimages.blob.core.windows.net/plantai-tfjs-model/model.json');\r\n\r\n    this.setState({\r\n      labels,\r\n      tfModel\r\n    })\r\n  }\r\n\r\n  tryNowClickHandler = () => {\r\n    this.setState({\r\n      showTryNow: true\r\n    })\r\n  }\r\n\r\n  tryNowCloseHandler = () => {\r\n    this.setState({\r\n      showTryNow: false\r\n    })\r\n  }\r\n\r\n  resultPageCloseHandler = () => {\r\n    this.setState({\r\n      showPrediction: false,\r\n      image: null,\r\n    })\r\n  }\r\n\r\n  tryAnotherClickHandler = () => {\r\n    this.setState({\r\n      showPrediction: false,\r\n      image: null,\r\n      showTryNow: true\r\n    })\r\n  }\r\n\r\n  imageSelectHandler = async (image) => {\r\n\r\n    const base64 = await new Promise((resolve, reject) => {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(image);\r\n\r\n      reader.onload = function () {\r\n        resolve(reader.result);\r\n      };\r\n      reader.onerror = function (error) {\r\n        reject(error);\r\n      };\r\n\r\n    });\r\n\r\n    this.setState({\r\n      showTryNow: false,\r\n      showPrediction: true,\r\n      image: base64\r\n    })\r\n\r\n  }\r\n\r\n  predictDisease = async () => {\r\n    while (!this.state.tfModel) {\r\n      await new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(true);\r\n        }, 500)\r\n      })\r\n    }\r\n    let img = document.getElementById('plant-photo')\r\n\r\n    let offset = tf.scalar(255)\r\n    let tensorImg = tf.browser.fromPixels(img).resizeNearestNeighbor([224, 224]).toFloat().expandDims();\r\n    let tensorImg_scaled = tensorImg.div(offset)\r\n    let prediction = await this.state.tfModel.predict(tensorImg_scaled).data();\r\n\r\n    let predicted_class = tf.argMax(prediction)\r\n    let class_idxs = Array.from(predicted_class.dataSync());\r\n\r\n    const diseases = [];\r\n\r\n    for (const class_idx of class_idxs) {\r\n      const predictedDisease = this.state.labels[class_idx];\r\n      let [name, disease] = predictedDisease.split('___');\r\n      name = name.replaceAll('_', ' ');\r\n      disease = disease.replaceAll('_', ' ');\r\n      diseases.push({\r\n        name,\r\n        disease,\r\n        // image: `http://www.google.com/images?q=${predictedDisease}.PNG`,\r\n        cureURL: encodeURI(`https://www.google.com/search?q=How to cure ${disease} in ${name}`)\r\n      })\r\n    }\r\n\r\n    return diseases;\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.showTryNow) {\r\n      return (\r\n        <UploadPopup onClose={this.tryNowCloseHandler}\r\n          onCapture={this.imageSelectHandler} />\r\n      )\r\n    }\r\n\r\n    if (this.state.showPrediction) {\r\n      return (\r\n        <ResultPage image={this.state.image}\r\n          getDiseases={this.predictDisease}\r\n          onTryAnotherClick={this.tryAnotherClickHandler}\r\n          onClose={this.resultPageCloseHandler} />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Header onTryNowClick={this.tryNowClickHandler} />\r\n        <Instructions id=\"instructions\" />\r\n        <Blog id=\"blog\" />\r\n        <Footer />\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Homepage;\r\n","import Homepage from \"./Homepage\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCloudUploadAlt,\r\n  faMobileAlt,\r\n  faChevronRight,\r\n  faList,\r\n  faFolderOpen,\r\n  faCamera,\r\n  faImages,\r\n  faWindowClose,\r\n  faComments,\r\n  faExclamationTriangle,\r\n  faBolt,\r\n  faSkull,\r\n  faFirstAid,\r\n  faPlusSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  faCloudUploadAlt,\r\n  faMobileAlt,\r\n  faChevronRight,\r\n  faList,\r\n  faFolderOpen,\r\n  faCamera,\r\n  faImages,\r\n  faWindowClose,\r\n  faComments,\r\n  faExclamationTriangle,\r\n  faBolt,\r\n  faSkull,\r\n  faFirstAid,\r\n  faPlusSquare\r\n);\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Homepage />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}